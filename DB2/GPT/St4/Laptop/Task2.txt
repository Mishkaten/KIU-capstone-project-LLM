-- Create building table as a strong entity
CREATE TABLE public.building (
    building_id serial PRIMARY KEY,
    building_name varchar(50) NOT NULL
);

-- Create room table as a weak entity with composite primary key and foreign key referencing building
CREATE TABLE public.room (
    room_id serial,
    building_id integer,
    room_number varchar(10) NOT NULL,
    PRIMARY KEY (room_id, building_id),
    CONSTRAINT fk_building FOREIGN KEY(building_id) REFERENCES public.building(building_id) ON UPDATE CASCADE ON DELETE CASCADE
);

-- Add new columns to lesson table for building and room references
ALTER TABLE public.lesson
ADD COLUMN building_id integer,
ADD COLUMN room_id integer;

-- Add composite foreign key (building_id, room_id) to lesson table referencing room table
ALTER TABLE public.lesson
ADD CONSTRAINT fk_room FOREIGN KEY(building_id, room_id) REFERENCES public.room(building_id, room_id) ON UPDATE CASCADE ON DELETE CASCADE;

-- Ensure that at a specific lesson time, a room in a building can only be assigned to one lesson
ALTER TABLE public.lesson
ADD CONSTRAINT unique_lesson_time_building_room UNIQUE (lesson_time, building_id, room_id);
