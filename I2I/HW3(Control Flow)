Control-flow

This assignment has three parts.

Control-flow Diagram

Draw the control-flow diagram for the following MiniJava program according to the rules of the lecture:

1   int x, r, n;
2   r = 1;
3   n = 1;
4   x = readInt();
5   while (n <= x) {
6       if (r % 1 == 0) {
7           r = r * n;
8       } else {
9           r = r * (-n);
10          write(r);
11      }
12      n = n + 1;
13  }
14  write(r);


Table of Program States

Create a table containing the values of the program variables attained after executing the corresponding line of code. Collect into the table only those lines which contain assignments or input (name = expr;or name = readInt(); according to the MiniJava grammar). Record the number of the corresponding line in the leftmost column, and mark those variables which have not yet received a value with a minus/hyphen.

Assume that the user input in line 4 results in the value 3.

Example (without reference to the program):

Line  x    y    1-10315104155 

Debugger

Copy the program into your IDE. For that, you may use any template of a programming assignment so far or create a new project, copy/adapt some version of MiniJava.java into that project and past the program below into the main method.

Now compare the entries of your table by means of the debugger of your IDE. For that, place a breakpoint at line 5.

int x, r, n;
r = 1;
n = 1;
x = readInt();
while (n <= x) {
    if (r % 1 == 0) {
        r = r * n;
    } else {
        r = r * (-n);
        write(r);
    }
    n = n + 1;
}
write(r);
